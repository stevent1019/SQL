# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL. 

SELECT * FROM BIT_DB.Spotifydata;

# Lowest 5 energy songs
SELECT energy, track_name
,artist_name
FROM BIT_DB.Spotifydata
ORDER BY energy asc
LIMIT 5;

# Who are the top 10 artists by popularity?
SELECT track_name
,artist_name
,popularity
FROM BIT_DB.Spotifydata
ORDER BY popularity desc
LIMIT 10;

# Which artist had the longest song?
SELECT artist_name
,track_name
,duration_ms/60000.0
FROM BIT_DB.Spotifydata
GROUP BY artist_name
,track_name
ORDER BY duration_ms desc
LIMIT 1;

# What is the average popularity for each song key?
SELECT song_key
,SUM(popularity)/COUNT(song_key) as "average popularity"
FROM BIT_DB.Spotifydata
GROUP BY song_key
ORDER BY "average popularity" desc;

# What is the average danceability for the top 10 most popular songs?
SELECT SUM(popularity)/12
,avg(danceability)
FROM BIT_DB.Spotifydata
WHERE popularity
IN
    (SELECT popularity
    FROM BIT_DB.Spotifydata
    ORDER BY popularity desc LIMIT 10);
